import { LitElement, html, css } from 'lit-element';

export class AuthErrorPage extends LitElement {
  static get styles() {
    return css`
      :host {
        padding-top: 50px;
        width: 100vw;
        height: 100vh;
        display: grid;
        place-items: center;
      }

      #message-container {
        background-color: white;
        padding: 20px;
        display: flex;
        flex-direction: column;
        align-items: center;
        min-width: 450px;
        width: 50%;
        max-width: 700px;
        height: 250px;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2),
          0 6px 20px 0 rgba(0, 0, 0, 0.19);
      }

      #message-container p {
        text-align: center;
      }

      .scale-in-center {
        -webkit-animation: scale-in-center 0.5s
          cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
        animation: scale-in-center 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94)
          both;
      }

      /* ----------------------------------------------
 * Generated by Animista on 2021-5-18 16:23:14
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info.
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

      /**
 * ----------------------------------------
 * animation scale-in-center
 * ----------------------------------------
 */
      @-webkit-keyframes scale-in-center {
        0% {
          -webkit-transform: scale(0);
          transform: scale(0);
          opacity: 1;
        }
        100% {
          -webkit-transform: scale(1);
          transform: scale(1);
          opacity: 1;
        }
      }
      @keyframes scale-in-center {
        0% {
          -webkit-transform: scale(0);
          transform: scale(0);
          opacity: 1;
        }
        100% {
          -webkit-transform: scale(1);
          transform: scale(1);
          opacity: 1;
        }
      }
    `;
  }

  render() {
    return html`
      <main id="message-container" class="scale-in-center">
        <h1>Authentication Error</h1>
        <p>
          You need to be logged in with a valid google account if you want to
          access this content.
        </p>
      </main>
      <script>
        const navBarLoginButton =
          document.getElementsByClassName('g-signin2')[0];
        console.log(navBarLoginButton);
      </script>
    `;
  }
}

customElements.define('auth-error-page', AuthErrorPage);
